#include<stdio.h>
#include<stdlib.h>

//unsigned int ack( unsigned int x, unsigned int y);
static unsigned int calls;

unsigned int ack( unsigned int x, unsigned int y)
{
    calls++;
  if(x == 0)
  {
      //printf("\n");
      //printf("first argument: %d \n", x+1 );
      //printf("\n");
      return (x + 1 );

  }
  else if( y == 0 )
  {
    //printf("\n");
    //printf("Second argument: %d \n", ack(x - 1, 1) );
    //printf("\n");
    return (  ack(x - 1, 1) );
  }
  else //if(x > 0 && y > 0 )
  {

   // printf("\n");
   // printf("3rd argument: %d\n", ack(x - 1, ack(x, y - 1) ) );
    //printf("\n");
    return ( ack(x - 1, ack(x, y - 1) ) );
  }


}

int main(int argc, char* argv[])
{

    unsigned int val1,val2, results;
    val1 = (unsigned)atoi(argv[1]);
    val2 = (unsigned)atoi(argv[2]);

    printf("Ackernmann function:\n");
   /* for(val1 = 0; val1 <4; val1++)
    {

        for(val2 = 0; val2 < 5; val2++)
        {

          printf("%u \t", ack(val1, val2));
         //printf("break");
        }
        printf("\n");
    }*/
    calls = 0;
    results = ack(val1, val2);
    printf("Formula: %u  (%u calls)\n", results, calls);

    return 0;
}

